// -*- mode: c;-*-
typedef struct {
    // Simple mesh format; render all display lists specified.
    ubyte opaqueDisplayList[4]; // can be zero
    ubyte translucentDisplayList[4]; // can be zero
} ZMeshData0;

typedef struct {
    // LOD Mesh Display List
    // min maxes are player coordinates to render first displaylist
    short maxX;
    short maxZ;
    short minX;
    short minZ;
    ubyte closeDisplayList[4];
    ubyte farDisplayList[4];
} ZMeshData2;

typedef struct (uint64 hPos, ubyte &bankType ){
    ubyte meshType;
    ubyte numMeshes;
    ubyte zeroes[2];
    ZBankPointer entryStart;
    ZBankPointer entryStop;
    if( entryStart.zb.bankNo == bankType ){
        local uint64 returnTo = FTell();
        FSeek( hPos + entryStart.offset );
        if( meshType == 0x00 ){
            ZMeshData0 data(numMeshes);
        } else if( meshType == 0x01 ){
            ZMeshData0 data[numMeshes];
            if( entryStop.zb.bankNo == bankType ){
                local uint64 returnTo2 = FTell();
                FSeek( hPos + entryStop.offset );
                JFIF doILookLikeIKnowWhatAJayPegIs;
                FSeek( returnTo2 );
            } else {
                EXWarning("External Drank");
            }
        } else if( meshType == 0x02 ){
            ZMeshData2 data[numMeshes];
        }
        FSeek( returnTo );
    } else {
        Printf("\n%d is DEFINITELY not %d\n", entryStart.offset, bankType);
        EXWarning("External Flank");
    }
/*




    */
} ZMeshHeader;