// -*- mode: c;-*-


typedef struct {
    short minX;
    short topY;
    short minZ;
    short sizeX;
    short sizeZ;
    ubyte zeroes[4];
    ushort maybeWaterPropertiesOrCameraEffects;
} ZWaterBox;

typedef struct {
    short minX;
    short minY;
    short minZ;
    short maxX;
    short maxY;
    short maxZ;
    ushort numVerts;
    ubyte zeroes1[2];
    ZBankPointer vertArrayOffset;
    if( vertArrayOffset.zb.bankNo == 0x02 ){
        local uint64 returnTo1 = FTell();
        FSeek(headerStart + vertArrayOffset.offset);
        ZVector verts[numVerts];
        FSeek(returnTo1);
    }
    ushort numPolys;
    ubyte zeroes2[2];
    ZBankPointer polyArrayOffset;
    if( polyArrayOffset.zb.bankNo == 0x02 ){
        local uint64 returnTo2 = FTell();
        FSeek(headerStart + polyArrayOffset.offset);
        ZPolyList polys[numPolys];
        FSeek(returnTo2);
    }
    ZBankPointer polyTypeArrayOffset;
    if( polyArrayOffset.zb.bankNo == 0x02 ){
        local uint64 returnTo3 = FTell();
        FSeek(headerStart + polyTypeArrayOffset.offset);
        ZPolyType polyTypes[numPolys];
        FSeek(returnTo3);
    }
    ZBankPointer cameraDataOffset; //if not zeroes
    if( cameraDataOffset.zb.bankNo == 0x02 ){
        local uint64 returnTo4 = FTell();
        FSeek(headerStart + cameraDataOffset.offset);
        ZCameraData cameraData;
        FSeek(returnTo4);
    }
    ushort numWaterBoxes; //if not zeroes
    ubyte zeroes[2]; // WHY THE DOCUMENTS GOTTA BE SO OBTUSE
    ZBankPointer waterBoxArrayOffset;
    if( waterBoxArrayOffset.zb.bankNo == 0x02 ){
        local uint64 returnTo5 = FTell();
        FSeek(headerStart + waterBoxArrayOffset.offset);
        ZWaterBox waterBoxes[numWaterBoxes];
        FSeek(returnTo5);
    }
} ZCollisionHeader;