// -*- mode: c;-*-
// main identifiers
#define GAME    "MM"
#define REGION  "E"
#define VIDEO   "PAL"
#define DEFLATE 1
#define DEBUG   1

#include "autoload.bt"

#define KNOWN SetBackColor(0x62A132) // Green
#define UNKNOWN SetBackColor(0x7DE3FF) // Yellow
#define UNUSED SetBackColor(0xA265B8) // Purple

typedef struct {
    ubyte bit_7 : 1;
    ubyte bit_6 : 1;
    ubyte bit_5 : 1;
    ubyte bit_4 : 1;
    ubyte bit_3 : 1;
    ubyte bit_2 : 1;
    ubyte bit_1 : 1;
    ubyte bit_0 : 1;
} GenericBitfield;

typedef enum <ubyte> {
    Item_Ocarina            = 0x00,
    Item_Bow                = 0x01,
    Item_Fire_Arrows        = 0x02,
    Item_Ice_Arrows         = 0x03,
    Item_Light_Arrows       = 0x04,
    Item_Unused0            = 0x05, // "Fairy Ocarina" acts like Pictobox
    Item_Bombs              = 0x06,
    Item_Bombchu            = 0x07,
    Item_Deku_Stick         = 0x08,
    Item_Deku_Nut           = 0x09,
    Item_Magic_Beans        = 0x0A,
    Item_Unused1            = 0x0B, // "Longshot" acts like Pictobox
    Item_Powder_Keg         = 0x0C,
    Item_Pictograph         = 0x0D,
    Item_Lens_of_Truth      = 0x0E,
    Item_Hookshot           = 0x0F,
    Item_Fairy_Sword        = 0x10,
    Item_Unused2            = 0x11, // "Fairy's Slingshot" acts like Pictobox

    Item_Empty_Bottle       = 0x12,
    Item_Red_Potion         = 0x13,
    Item_Green_Potion       = 0x14,
    Item_Blue_Potion        = 0x15,
    Item_Fairy              = 0x16,
    Item_Deku_Princess      = 0x17,
    Item_Milk_Full          = 0x18,
    Item_Milk_Half          = 0x19,
    Item_Fish               = 0x1A,
    Item_Bugs               = 0x1B,
    Item_Blue_Fire          = 0x1C, // acts like bugs
    Item_Poe                = 0x1D,
    Item_Big_Poe            = 0x1E,
    Item_Spring_Water       = 0x1F,
    Item_Hot_Spring_Water   = 0x1F,
    Item_Zora_Egg           = 0x21,
    Item_Gold_Dust          = 0x22,
    Item_Magical_Mushroom   = 0x23,
    Item_Sea_Horse          = 0x24,
    Item_Chateau_Romani     = 0x25,
    Item_Hylian_Loach       = 0x26, // "This item doesn't seem to work here..."
    Item_Obabas_Drink       = 0x27, // acts like Poe

    Item_Moons_Tear         = 0x28,
    Item_Land_Title_Deed    = 0x29,
    Item_Swamp_Title_Deed   = 0x2A,
    Item_Mountain_Title_Deed= 0x2B,
    Item_Ocean_Title_Deed   = 0x2C,
    Item_Room_Key           = 0x2D,
    Item_Special_Delivery   = 0x2E,
    Item_Letter_to_Kafei    = 0x2F,
    Item_Pendant_of_Memories= 0x30,
    Item_Unused3            = 0x31,

    // inventory slot order
    Item_Mask_Postman       = 0x3E,
    Item_Mask_All_Night     = 0x38,
    Item_Mask_Blast         = 0x47,
    Item_Mask_Stone         = 0x45,
    Item_Mask_Great_Fairy   = 0x40,
    Item_Mask_Deku          = 0x32,
    Item_Mask_Keaton        = 0x3A,
    Item_Mask_Bremen        = 0x46,
    Item_Mask_Bunny         = 0x39,
    Item_Mask_Don_Gero      = 0x42,
    Item_Mask_Scents        = 0x48,
    Item_Mask_Goron         = 0x33,
    Item_Mask_Romani        = 0x3C,
    Item_Mask_Troupe_Leader = 0x3D,
    Item_Mask_Kafei         = 0x37,
    Item_Mask_Couples       = 0x3F,
    Item_Mask_Truth         = 0x36,
    Item_Mask_Zora          = 0x34,
    Item_Mask_Kamaro        = 0x43,
    Item_Mask_Gibdo         = 0x41,
    Item_Mask_Garos         = 0x3B,
    Item_Mask_Captains      = 0x44,
    Item_Mask_Giants        = 0x49,
    Item_Mask_Fierce_Deity  = 0x35,

    Item_Kokiri_Sword       = 0x4D,
    Item_Razor_Sword        = 0x4E,
    Item_Gilded_Sword       = 0x4F,

    Item_None2              = 0xFD, // sometimes used for B button
    Item_None               = 0xFF
} ZSaveInventoryItem;

typedef enum <ubyte> {
    Slot_Ocarina            = 0x00,
    Slot_Bow                = 0x01,
    Slot_Fire_Arrows        = 0x02,
    Slot_Ice_Arrows         = 0x03,
    Slot_Light_Arrows       = 0x04,
    Slot_Event_1            = 0x05,
    Slot_Bombs              = 0x06,
    Slot_Bombchu            = 0x07,
    Slot_Deku_Stick         = 0x08,
    Slot_Deku_Nut           = 0x09,
    Slot_Magic_Beans        = 0x0A,
    Slot_Event_2            = 0x0B,
    Slot_Powder_Keg         = 0x0C,
    Slot_Pictograph         = 0x0D,
    Slot_Lens_of_Truth      = 0x0E,
    Slot_Hookshot           = 0x0F,
    Slot_Fairy_Sword        = 0x10,
    Slot_Event_3            = 0x11,
    Slot_Bottle_1           = 0x12,
    Slot_Bottle_2           = 0x13,
    Slot_Bottle_3           = 0x14,
    Slot_Bottle_4           = 0x15,
    Slot_Bottle_5           = 0x16,
    Slot_Bottle_6           = 0x17,

    Slot_Mask_Postman       = 0x18,
    Slot_Mask_All_Night     = 0x19,
    Slot_Mask_Blast         = 0x1A,
    Slot_Mask_Stone         = 0x1B,
    Slot_Mask_Great_Fairy   = 0x1C,
    Slot_Mask_Deku          = 0x1D,
    Slot_Mask_Keaton        = 0x1E,
    Slot_Mask_Bremen        = 0x1F,
    Slot_Mask_Bunny         = 0x20,
    Slot_Mask_Don_Gero      = 0x21,
    Slot_Mask_Scents        = 0x22,
    Slot_Mask_Goron         = 0x23,
    Slot_Mask_Romani        = 0x24,
    Slot_Mask_Troupe_Leader = 0x25,
    Slot_Mask_Kafei         = 0x26,
    Slot_Mask_Couples       = 0x27,
    Slot_Mask_Truth         = 0x28,
    Slot_Mask_Zora          = 0x29,
    Slot_Mask_Kamaro        = 0x2A,
    Slot_Mask_Gibdo         = 0x2B,
    Slot_Mask_Garos         = 0x2C,
    Slot_Mask_Captains      = 0x2D,
    Slot_Mask_Giants        = 0x2E,
    Slot_Mask_Fierce_Deity  = 0x2F,

    Slot_None               = 0xFF
} ZSaveInventorySlot;

typedef struct {
    ZSaveInventoryItem b_button_item;
    ZSaveInventoryItem c_left_button_item;
    ZSaveInventoryItem c_down_button_item;
    ZSaveInventoryItem c_right_button_item;
} ZSaveItemsEquipped;

typedef struct { // Which item you have in each slot
    ZSaveInventoryItem ocarina;
    ZSaveInventoryItem bow;
    ZSaveInventoryItem fire_arrows;
    ZSaveInventoryItem ice_arrows;
    ZSaveInventoryItem light_arrows;
    ZSaveInventoryItem event_1;
    ZSaveInventoryItem bombs;
    ZSaveInventoryItem bombchu;
    ZSaveInventoryItem deku_stick;
    ZSaveInventoryItem deku_nut;
    ZSaveInventoryItem magic_beans;
    ZSaveInventoryItem event_2;
    ZSaveInventoryItem powder_keg;
    ZSaveInventoryItem pictograph;
    ZSaveInventoryItem lens_of_truth;
    ZSaveInventoryItem hookshot;
    ZSaveInventoryItem fairy_sword;
    ZSaveInventoryItem event_3;
    ZSaveInventoryItem bottle_1;
    ZSaveInventoryItem bottle_2;
    ZSaveInventoryItem bottle_3;
    ZSaveInventoryItem bottle_4;
    ZSaveInventoryItem bottle_5;
    ZSaveInventoryItem bottle_6;

    ZSaveInventoryItem mask_postman;
    ZSaveInventoryItem mask_all_night;
    ZSaveInventoryItem mask_blast;
    ZSaveInventoryItem mask_stone;
    ZSaveInventoryItem mask_great_fairy;
    ZSaveInventoryItem mask_deku;
    ZSaveInventoryItem mask_keaton;
    ZSaveInventoryItem mask_bremen;
    ZSaveInventoryItem mask_bunny;
    ZSaveInventoryItem mask_don_gero;
    ZSaveInventoryItem mask_scents;
    ZSaveInventoryItem mask_goron;
    ZSaveInventoryItem mask_romani;
    ZSaveInventoryItem mask_troupe_leader;
    ZSaveInventoryItem mask_kafei;
    ZSaveInventoryItem mask_couples;
    ZSaveInventoryItem mask_truth;
    ZSaveInventoryItem mask_zora;
    ZSaveInventoryItem mask_kamaro;
    ZSaveInventoryItem mask_gibdo;
    ZSaveInventoryItem mask_garos;
    ZSaveInventoryItem mask_captains;
    ZSaveInventoryItem mask_giants;
    ZSaveInventoryItem mask_fierce_deity;
} ZSaveInventorySlotItemIDs;

typedef struct { // How much ammo you have in each slot
    ubyte ocarina;
    ubyte bow;
    ubyte fire_arrows;
    ubyte ice_arrows;
    ubyte light_arrows;
    ubyte event_1;
    ubyte bombs;
    ubyte bombchu;
    ubyte deku_stick;
    ubyte deku_nut;
    ubyte magic_beans;
    ubyte event_2;
    ubyte powder_keg;
    ubyte pictograph;
    ubyte lens_of_truth;
    ubyte hookshot;
    ubyte fairy_sword;
    ubyte event_3;
    ubyte bottle_1;
    ubyte bottle_2;
    ubyte bottle_3;
    ubyte bottle_4;
    ubyte bottle_5;
    ubyte bottle_6;
} ZSaveInventorySlotItemAmount;

typedef enum <ubyte> {
    sound_stereo,
    sound_mono,
    sound_headset,
    sound_surround
} ZSaveSoundSetting;

typedef enum <ubyte> {
    target_switch,
    target_hold
} ZSaveTargetStyle;

typedef enum <ubyte> {
    wear_none = 0,
    wear_truth = 1,
    wear_kafei = 2,
    wear_all_night = 3,
    wear_bunny = 4,
    wear_keaton = 5,
    wear_garos = 6,
    wear_romani = 7,
    wear_troupe_leader = 8,
    wear_postman = 9,
    wear_couples = 10,
    wear_great_fairy = 11,
    wear_gibdo = 12,
    wear_don_gero = 13,
    wear_kamaro = 14,
    wear_captains = 15,
    wear_stone = 16,
    wear_bremen = 17,
    wear_blast = 18,
    wear_scents = 19,
    wear_giants = 20,

    // are these possible without glitches?
    wear_fierce_deity = 21,
    wear_goron = 22,
    wear_zora = 23,
    wear_deku = 24
} ZSaveWearingMask;

typedef enum <uint> {
    no_cutscene = 0x0000,
    in_cutscene = 0xFFFD
    // 0xFFEF to 0xFFFF might be used here, but i've only seen 0xFFFD
} ZSaveCutsceneOffset <format=hex>;

typedef enum <uint16> {
    owl_hidden = 15, // always takes you to mayor's residence
    owl_stone_tower = 9,
    owl_ikana_canyon = 8,
    owl_southern_swamp = 7,
    owl_woodfall = 6,
    owl_milk_road = 5,
    owl_clock_town = 4,
    owl_mountain_village = 3,
    owl_snowhead = 2,
    owl_zora_cape = 1,
    owl_great_bay_coast = 0
} ZSaveOwlID;

typedef enum <uint> {
    day,
    night
} ZSaveDayNight;

typedef enum <int> {
    // technically, any value is valid
    normal = 0,
    inverted_song_of_time = -2
} ZSaveTimeSpeed;

typedef enum <ubyte> {
    trans_fierce_deity,
    trans_goron,
    trans_zora,
    trans_deku,
    trans_human
} ZSaveTransformation;

typedef enum <ubyte> {
    no_magic_meter,
    normal_magic_meter,
    double_magic_meter
} ZSaveMagicMeterSize;

typedef struct {
    uint16 hidden_owl : 1; // used as a placeholder in some scene setups
    uint16 unused : 5;
    uint16 stone_tower : 1;
    uint16 ikana_canyon : 1;
    uint16 southern_swamp : 1;
    uint16 woodfall : 1;
    uint16 milk_road : 1;
    uint16 clock_town : 1;
    uint16 mountain_village : 1;
    uint16 snowhead : 1;
    uint16 zora_cape : 1;
    uint16 great_bay_coast : 1;
} ZSaveOwlsHit;

typedef enum <ubyte> {
    no_boots
} ZSaveBoots;
typedef enum <ubyte> {
    no_tunic,
    kokiri_tunic,
    goron_tunic,
    zora_tunic
} ZSaveTunic;
typedef enum <ubyte> {
    no_shield,
    heros_shield,
    mirror_shield
} ZSaveShield;
typedef enum <ubyte> {
    no_sword,
    kokiri_sword,
    razor_sword,
    gilded_sword
} ZSaveSword;

typedef enum <uint> {
    no_deku_nut_capacity,
    deku_nut_capacity_20,
    deku_nut_capacity_30,
    deku_nut_capacity_40
} ZSaveUpgradeNuts;
typedef enum <uint> {
    no_deku_stick_capacity,
    deku_stick_capacity_10,
    deku_stick_capacity_20,
    deku_stick_capacity_30
} ZSaveUpgradeSticks;
typedef enum <uint> {
    default_wallet,
    adults_wallet,
    giants_wallet
} ZSaveUpgradeWallet;
typedef enum <uint> {
    no_bomb_capacity,
    bomb_capacity_20,
    bomb_capacity_30,
    bomb_capacity_40
} ZSaveUpgradeBombs;
typedef enum <uint> {
    no_quiver,
    quiver_30,
    quiver_40,
    quiver_50
} ZSaveUpgradeArrows;

typedef struct {
    uint unused0 : 9;
    ZSaveUpgradeNuts deku_nut_capacity : 3;
    ZSaveUpgradeSticks deku_stick_capacity : 3;
    ubyte bullet_bag_capacity : 3;
    ZSaveUpgradeWallet wallet_size : 2;
    ubyte dive_meter : 3;
    ubyte strength_upgrade : 3;
    ZSaveUpgradeBombs bomb_bag_capacity : 3;
    ZSaveUpgradeArrows quiver_capacity : 3;
} ZSaveUpgrades;

typedef struct {
    uint heart_pieces : 4;
    uint unused0 : 2;
    uint picture_taken : 1;
    uint song_lullaby_intro : 1;

    uint unused1 : 4;
    uint unknown : 1; // TODO
    uint bombers_notebook : 1;
    uint suns_song : 1;
    uint song_of_storms : 1;

    uint song_of_soaring : 1;
    uint eponas_song : 1;
    uint song_of_healing : 1;
    uint song_of_time : 1;
    uint sarias_song : 1;
    uint oath_to_order : 1;
    uint elegy_of_emptiness : 1;
    uint new_wave_bossa_nova : 1;

    uint goron_lullaby : 1;
    uint sonata_of_awakening : 1;
    uint unused2 : 2;
    uint remains_twinmold : 1;
    uint remains_gyorg : 1;
    uint remains_goht : 1;
    uint remains_odolwa : 1;
} ZSaveQuestStatus;

typedef struct {
    ubyte unused : 5;
    ubyte map : 1;
    ubyte compass : 1;
    ubyte boss_key : 1;
} ZSaveDungeonItems;

typedef struct {
    // inferring from OoT, which is probably different:
    uint flags0 <format=binary>; // chest_flags?
    uint flags1 <format=binary>; // switches?
    uint flags2 <format=binary>; // room_clear_flags?
    uint flags3 <format=binary>; // collectible_flags?
    uint flags4 <format=binary>; // visited_rooms?
} ZSaveSceneFlags;

typedef struct {
    ubyte digit1;
    ubyte digit2;
    ubyte digit3;
} ZSaveLotteryCodes;
typedef enum <ubyte> {
    red,
    blue,
    green,
    yellow
} ZSaveSpiderHouseMaskOrder;

typedef enum <ubyte> {
    note_end = 0x00,
    note_a = 0x02, // D4
    note_down = 0x05, // F4
    note_right = 0x09, // A4
    note_left = 0x0B, // B4
    note_up = 0x0E, // D5
    note_stop = 0xFF,
} ZNote;

typedef struct {
    KNOWN;
    ZNote note;
    UNKNOWN;
    ubyte unknown0;
    KNOWN;
    uint16 length;
    ubyte volume;
    UNKNOWN;
    ubyte unknown1;
    KNOWN;
    byte pitch;
    byte vibrato;
} ZSongNote;

typedef struct {
    local string thisName = "ZSaveDataInternal";
    KNOWN;
    uint entrance_index <format=hex>; // Stores the Entrance Link starts/respawns at
    ZSaveWearingMask wearing_mask;
    ubyte opening_flag; // Has completed intro
    ubyte text_skip_timer; // Prevents skipping text for a period

    UNKNOWN;
    ubyte unknown0; // Something to do with picking up items?

    KNOWN;
    ZSaveCutsceneOffset cutscene_offset;
    uint16 time_of_day <format=hex>;
    ZSaveOwlID owl_id;
    ZSaveDayNight day_night;
    ZSaveTimeSpeed time_speed;
    uint day;
    uint days_elapsed;
    ZSaveTransformation transformation;

    UNKNOWN;
    ubyte unknown1; // spring_flag?

    KNOWN;
    ubyte have_tatl; // boolean
    ubyte owl_save; // boolean
    char file_validation[6];
    uint16 song_of_time_count;
    char file_name[8];
    uint16 heart_containers <format=hex>; // 0x10 per heart
    uint16 health <format=hex>; // 0x10 per heart
    ZSaveMagicMeterSize magic_meter_size;
    ubyte magic <format=hex>; // 0x30 for normal, 0x60 for double
    uint16 rupees;
    uint navi_timer;
    ubyte has_normal_magic; // boolean
    ubyte has_double_magic; // boolean
    uint16 double_defense; // boolean? actually seems unused in MM

    UNKNOWN;
    uint16 unknown2;

    KNOWN;
    ZSaveOwlsHit owls_hit;

    UNKNOWN;
    uint unknown3 <format=hex>;

    KNOWN;
    ZSaveItemsEquipped items_human; // also used for fierce deity
    ZSaveItemsEquipped items_goron;
    ZSaveItemsEquipped items_zora;
    ZSaveItemsEquipped items_deku;
    UNUSED;
    ubyte unused; // this is where the b button slot would be
    KNOWN;
    ZSaveInventorySlot c_left_button_slot;
    ZSaveInventorySlot c_down_button_slot;
    ZSaveInventorySlot c_right_button_slot;

    UNKNOWN;
    uint unknown4<format=hex>;
    uint unknown5<format=hex>;
    uint unknown6<format=hex>;

    KNOWN;
    ZSaveBoots boots : 4;
    ZSaveTunic tunic : 4;
    ZSaveShield shield : 4;
    ZSaveSword sword : 4;

    UNKNOWN;
    uint16 unknown7;

    KNOWN;
    ZSaveInventorySlotItemIDs inventory_slot_item_ids;
    ZSaveInventorySlotItemAmount inventory_slot_item_amount;

    ZSaveUpgrades upgrade_data;

    ZSaveQuestStatus quest_status_data;

    ZSaveDungeonItems dungeon_items[10]; // only 4 are used, but
    // debug save has boss/compass/map in all 10

    // all used but the last, i think
    byte small_key_amount[9] <comment="-1 hides the small key amount">;

    // normally 0 or 20 but anything inbetween works fine
    ubyte doubled_hearts;

    // maybe unused fairies too
    ubyte fairies[10];

    // says "LINK[eol]LINK[eol]LINK[eol]" in the game's encoding
    // on my completed file it actually matches my filename! weird.
    char unknown_name0[8];
    char unknown_name1[8];
    char unknown_name2[8];

    UNKNOWN;
    ubyte unknown9[0x37A];

    KNOWN;
    ZSaveSceneFlags scene_flags[0x78];

    UNKNOWN;
    ubyte unknown10[0xAA];

    KNOWN; // temporary names
    ubyte pictograph_special;
    ubyte pictograph_quality;
    ubyte pictograph_unknown;

    UNKNOWN;
    ubyte unknown11[0x27];

    KNOWN;
    // only the first 4 words wind up being used
    // but the code supports up to 7 words
    GenericBitfield minimaps[7*4] <format=hex>;

    uint16 skulltulas_woodfall;
    uint16 skulltulas_great_bay;

    UNKNOWN;
    ubyte unknown12[0x1A];

    KNOWN;
    uint16 banked_rupees;

    UNKNOWN;
    ubyte unknown13[0x18];

    KNOWN;
    GenericBitfield week_event_reg[100];

    GenericBitfield area_arrival[4] <format=hex>;
    GenericBitfield cloud_clear[4] <format=hex>;

    uint16 scarecrows_song_acquired;
    ZSongNote scarecrows_song[0x10];

    KNOWN;
    ubyte bombers_caught;
    ubyte bombers_order[5]; // unrelated to bombers code
    ZSaveLotteryCodes lottery_codes[3];
    ZSaveSpiderHouseMaskOrder spider_house_mask_order[6];
    ubyte bombers_code[5];

    uint16 epona_scene;
    int16 epona_x;
    int16 epona_y;
    int16 epona_z;
    int16 epona_angle;
    uint16 checksum <format=hex>;

} ZSaveDataInternal;

typedef struct {
    local string thisName = "ZSaveData";
    KNOWN;
    ZSaveDataInternal _;
    // nothing past this point is loaded by the game
    UNUSED;
    uint unused_end[0x3FD];
} ZSaveData;

typedef struct {
    local string thisName = "ZSaveDataOwl";
    KNOWN;
    ZSaveDataInternal _;

    KNOWN;
    GenericBitfield event_inf[8];

    KNOWN;
    ubyte rock_sirloin; // boolean
    ubyte b_button_enabled; // boolean
    uint16 bubble_timer;
    uint16 rupee_accumulator;

    ubyte hot_spring_water_statuses[6];
    ubyte hot_spring_water_timers[6*32]; // TODO: reverse engineer

    ubyte pictograph_picture[100*112]; // 5 bits per pixel

    UNUSED;
    uint unused_end[0xD8];
} ZSaveDataOwl;

typedef struct {
    local string thisName = "ZSaveDataFooter";
    UNKNOWN;
    uint16 unknown0;
    ubyte unknown1;

    KNOWN;
    ZSaveSoundSetting sound_setting;

    UNKNOWN;
    ubyte unknown2;

    KNOWN;
    ZSaveTargetStyle target_style;

    UNKNOWN;
    uint16 unknown3;
    uint unknown4;

    KNOWN;
    uint16 time_of_day <format=hex>;
    ZSaveOwlID owl_id;
    ZSaveDayNight day_night;
    ZSaveTimeSpeed time_speed;
    uint day;
    uint days_elapsed;
    ZSaveTransformation transformation;
    ubyte unknown5;
    ubyte have_tatl;
    ubyte owl_save;
    char file_validation[6];
    uint16 song_of_time_count;
    char file_name[8];
    uint16 heart_containers <format=hex>;
    uint16 health <format=hex>;
    ZSaveMagicMeterSize magic_meter_size;
    ubyte magic <format=hex>;
    uint16 rupees;
    uint navi_timer;
    ubyte has_normal_magic;
    ubyte has_double_magic;
    uint16 double_defense;
    uint16 unknown6;
    ZSaveOwlsHit owls_hit;
    uint unknown7 <format=hex>;

    ZSaveItemsEquipped items_human;
    ZSaveItemsEquipped items_goron;
    ZSaveItemsEquipped items_zora;
    ZSaveItemsEquipped items_deku;
    ubyte unused;
    ZSaveInventorySlot c_left_button_slot;
    ZSaveInventorySlot c_down_button_slot;
    ZSaveInventorySlot c_right_button_slot;

    uint unknown8<format=hex>;
    uint unknown9<format=hex>;
    uint unknown10<format=hex>;
    ZSaveBoots boots : 4;
    ZSaveTunic tunic : 4;
    ZSaveShield shield : 4;
    ZSaveSword sword : 4;
    uint16 unknown11;

    ZSaveInventorySlotItemIDs inventory_slot_item_ids;

    UNUSED;
    uint unused_end[0x1FD8];
} ZSaveDataFooter;

struct {
    ZSaveData saveData1;
    ZSaveData saveData1Backup;
    ZSaveData saveData2;
    ZSaveData saveData2Backup;
    ZSaveDataOwl saveDataOwl1;
    ZSaveDataOwl saveDataOwl1Backup;
    ZSaveDataOwl saveDataOwl2;
    ZSaveDataOwl saveDataOwl2Backup;
    ZSaveDataFooter saveDataFooter;
} Save;
