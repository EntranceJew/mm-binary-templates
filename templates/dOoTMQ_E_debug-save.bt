// main identifiers
#define GAME    "OoTMQ"
#define REGION  "E"
#define VIDEO   "PAL"
#define DEFLATE 1
#define DEBUG   1

#include "autoload.bt"

#define KNOWN SetBackColor(0x62A132) // Green
#define UNKNOWN SetBackColor(0x7DE3FF) // Yellow
#define UNUSED SetBackColor(0xA265B8) // Purple

typedef enum <ubyte> {
    Item_Deku_Sticks = 0,
    Item_Deku_Nuts = 1,
    Item_Bombs = 2,
    Item_Fairy_Bow = 3,
    Item_Fire_Arrow = 4,
    Item_Dins_Fire = 5,
    Item_Fairy_Slingshot = 6,
    Item_Fairy_Ocarina = 7,
    Item_Ocarina_of_Time = 8,
    Item_Bombchu = 9,
    Item_Hookshot = 10,
    Item_Longshot = 11,
    Item_Ice_Arrow = 12,
    Item_Farores_Wind = 13,
    Item_Boomerang = 14,
    Item_Lens_of_Truth = 15,
    Item_Magic_Beans = 16,
    Item_Megaton_Hammer = 17,
    Item_Light_Arrow = 18,
    Item_Nayrus_Love = 19,
    Item_Empty_Bottle = 20,
    Item_Red_Potion = 21,
    Item_Green_Potion = 22,
    Item_Blue_Potion = 23,
    Item_Bottled_Fairy = 24,
    Item_Fish = 25,
    Item_Milk_full = 26,
    Item_Rutos_Letter = 27,
    Item_Blue_Fire = 28,
    Item_Bug = 29,
    Item_Big_Poe = 30,
    Item_Milk_half = 31,
    Item_Poe = 32,
    Item_Weird_Egg = 33,
    Item_Cucco = 34,
    Item_Zeldas_Letter = 35,
    Item_Keaton_Mask = 36,
    Item_Skull_Mask = 37,
    Item_Spooky_Mask = 38,
    Item_Bunny_Hood = 39,
    Item_Goron_Mask = 40,
    Item_Zora_Mask = 41,
    Item_Gerudo_Mask = 42,
    Item_Mask_of_Truth = 43,
    Item_SOLD_OUT = 44,
    Item_Pocket_Egg = 45,
    Item_Pocket_Cucco = 46,
    Item_Cojiro = 47,
    Item_Odd_Mushroom = 48,
    Item_Odd_Potion = 49,
    Item_Poachers_Saw = 50,
    Item_Gorons_Sword_broken = 51,
    Item_Prescription = 52,
    Item_Eye_Ball_Frog = 53,
    Item_Eye_Drops = 54,
    Item_Claim_Check = 55,
    Item_Fairy_Bow_plus_Fire_Arrow = 56,
    Item_Fairy_Bow_plus_Ice_Arrow = 57,
    Item_Fairy_Bow_plus_Light_Arrow = 58,
    Item_Kokiri_Sword = 59,
    Item_Master_Sword = 60,
    Item_Biggoron_Sword = 61,
    Item_None = 255
} ZSaveInventoryItems;

typedef enum <ubyte> {
    Slot_Deku_Stick = 0,
    Slot_Deku_Nut = 1,
    Slot_Bombs = 2,
    Slot_Fairy_Bow = 3,
    Slot_Fire_Arrow = 4,
    Slot_Dins_Fire = 5,
    Slot_Fairy_Slingshot = 6,
    Slot_Ocarina = 7,
    Slot_Bombchu = 8,
    Slot_Hookshot_Longshot = 9,
    Slot_Ice_Arrow = 10,
    Slot_Farores_Wind = 11,
    Slot_Boomerang = 12,
    Slot_Lens_of_Truth = 13,
    Slot_Magic_Beans = 14,
    Slot_Megaton_Hammer = 15,
    Slot_Light_Arrow = 16,
    Slot_Nayrus_Love = 17,
    Slot_Bottle_1 = 18,
    Slot_Bottle_2 = 19,
    Slot_Bottle_3 = 20,
    Slot_Bottle_4 = 21,
    Slot_Adult_Trade_Item = 22,
    Slot_Child_Trade_Item = 23,
    Slot_None = 255
} ZSaveInventorySlots;

typedef enum <ubyte> {
    no_boots,
    kokiri_boots,
    iron_boots,
    hover_boots
} ZSaveBoots;
typedef enum <ubyte> {
    no_tunic,
    kokiri_tunic,
    goron_tunic,
    zora_tunic
} ZSaveTunic;
typedef enum <ubyte> {
    no_shield,
    kokiri_shield,
    hylian_shield,
    mirror_shield
} ZSaveShield;
typedef enum <ubyte> {
    no_sword,
    kokiri_sword,
    master_sword,
    biggoron_sword
} ZSaveSword;

typedef struct {
    ZSaveInventoryItems b_button_item;
    ZSaveInventoryItems c_left_button_item;
    ZSaveInventoryItems c_down_button_item;
    ZSaveInventoryItems c_right_button_item;
    ZSaveInventorySlots c_left_button_slot;
    ZSaveInventorySlots c_down_button_slot;
    ZSaveInventorySlots c_right_button_slot;

    UNUSED;
    ubyte unused;

    KNOWN;
    ZSaveBoots boots : 4;
    ZSaveTunic tunic : 4;
    ZSaveShield shield : 4;
    ZSaveSword sword : 4;
} ZSaveEquippedData;

typedef struct { // Which item you have in each slot
    ZSaveInventoryItems deku_stick;
    ZSaveInventoryItems deku_nut;
    ZSaveInventoryItems bombs;
    ZSaveInventoryItems fairy_bow;
    ZSaveInventoryItems fire_arrow;
    ZSaveInventoryItems dins_fire;
    ZSaveInventoryItems fairy_slingshot;
    ZSaveInventoryItems ocarina;
    ZSaveInventoryItems bombchus;
    ZSaveInventoryItems hookshot_longshot;
    ZSaveInventoryItems ice_arrow;
    ZSaveInventoryItems farores_wind;
    ZSaveInventoryItems boomerang;
    ZSaveInventoryItems lens_of_truth;
    ZSaveInventoryItems magic_beans;
    ZSaveInventoryItems megaton_hammer;
    ZSaveInventoryItems light_arrow;
    ZSaveInventoryItems nayrus_love;
    ZSaveInventoryItems bottle_1;
    ZSaveInventoryItems bottle_2;
    ZSaveInventoryItems bottle_3;
    ZSaveInventoryItems bottle_4;
    ZSaveInventoryItems adult_trade_item;
    ZSaveInventoryItems child_trade_item;
} ZSaveInventorySlotItemIDs;

typedef struct { // How much ammo you have in each slot
    ubyte deku_stick;
    ubyte deku_nut;
    ubyte bombs;
    ubyte fairy_bow;
    ubyte fire_arrow;
    ubyte dins_fire;
    ubyte fairy_slingshot;
    ubyte ocarina;
    ubyte bombchus;
    ubyte hookshot_longshot;
    ubyte ice_arrow;
    ubyte farores_wind;
    ubyte boomerang;
    ubyte lens_of_truth;
    ubyte magic_beans;
} ZSaveInventorySlotItemAmount;

typedef enum <ubyte> {
    sound_stereo,
    sound_mono,
    sound_headset,
    sound_surround
} ZSaveSoundSetting;

typedef enum <ubyte> {
    target_switch,
    target_hold
} ZSaveTargetStyle;

typedef struct {
    uint heart_pieces : 4;
    uint unused0 : 4;

    uint gold_skulltula_display : 1;
    uint gerudos_card : 1;
    uint stone_of_agony : 1;
    uint zoras_sapphire : 1;
    uint gorons_ruby : 1;
    uint kokiri_emerald : 1;
    uint song_of_storms : 1;
    uint song_of_time : 1;

    uint suns_song : 1;
    uint sarias_song : 1;
    uint eponas_song : 1;
    uint zeldas_lullaby : 1;
    uint prelude_of_light : 1;
    uint nocturne_of_shadow : 1;
    uint requiem_of_spirit : 1;
    uint serenade_of_water : 1;

    uint bolero_of_fire : 1;
    uint minuet_of_forest : 1;
    uint light_medallion : 1;
    uint shadow_medallion : 1;
    uint spirit_medallion : 1;
    uint water_medallion : 1;
    uint fire_medallion : 1;
    uint forest_medallion : 1;
} ZSaveQuestStatus;

typedef struct {
    ubyte unused : 5;
    ubyte map : 1;
    ubyte compass : 1;
    ubyte boss_key : 1;
} ZSaveDungeonItems;

typedef enum <uint> {
    age_adult,
    age_child
} ZSaveAge;

typedef enum <ubyte> {
    no_magic_meter,
    normal_magic_meter,
    double_magic_meter
} ZSaveMagicMeterSize;

typedef enum <ubyte> {
    bg_giants_knife,
    bg_biggoron_sword,
} ZSaveBiggoronSword;

typedef struct {
    ubyte unused_boots_flag : 1;
    ubyte hover_boots : 1;
    ubyte iron_boots : 1;
    ubyte kokiri_boots : 1;
    ubyte unused_tunic_flag : 1;
    ubyte zora_tunic : 1;
    ubyte goron_tunic : 1;
    ubyte kokiri_tunic : 1;

    ubyte unused_shield_flag : 1;
    ubyte mirror_shield : 1;
    ubyte hylian_shield : 1;
    ubyte deku_shield : 1;
    ubyte broken_giants_knife : 1; // unused?
    ubyte biggoron_sword : 1;
    ubyte master_sword : 1;
    ubyte kokiri_sword : 1;

    UNUSED;
    ubyte unused0;
    ubyte unused1;
} ZSaveEquipment;

typedef enum <uint> {
    no_deku_stick_capacity,
    deku_stick_capacity_10,
    deku_stick_capacity_20,
    deku_stick_capacity_30
} ZSaveUpgradeSticks;
typedef enum <uint> {
    no_deku_nut_capacity,
    deku_nut_capacity_20,
    deku_nut_capacity_30,
    deku_nut_capacity_40
} ZSaveUpgradeNuts;
typedef enum <uint> {
    no_scale,
    silver_scale,
    gold_scale
} ZSaveUpgradeScale;
typedef enum <uint> {
    default_wallet,
    adults_wallet,
    giants_wallet
} ZSaveUpgradeWallet;
typedef enum <uint> {
    no_bullet_bag,
    bullet_bag_30,
    bullet_bag_40,
    bullet_bag_50
} ZSaveUpgradeBullets;
typedef enum <uint> {
    no_quiver,
    quiver_30,
    quiver_40,
    quiver_50
} ZSaveUpgradeArrows;
typedef enum <uint> {
    no_bomb_bag,
    bomb_bag_20,
    bomb_bag_30,
    bomb_bag_40
} ZSaveUpgradeBombs;
typedef enum <uint> {
    no_strength_upgrade,
    goron_bracelet,
    silver_gauntlets,
    golden_gauntlets
} ZSaveUpgradeStrength;

typedef struct {
    uint unused0 : 9;
    ZSaveUpgradeNuts deku_nut_capacity : 3;
    ZSaveUpgradeSticks deku_stick_capacity : 3;
    ZSaveUpgradeBullets bullet_bag_capacity : 3;
    ZSaveUpgradeWallet wallet_size : 2;
    ZSaveUpgradeScale dive_meter : 3;
    ZSaveUpgradeStrength strength_upgrade : 3;
    ZSaveUpgradeBombs bomb_bag_capacity : 3;
    ZSaveUpgradeArrows quiver_capacity : 3;
} ZSaveUpgrades;

typedef struct {
    KNOWN;
    uint chest_flags <format=hex>;
    uint switches <format=hex>;
    uint room_clear_flags <format=hex>;
    uint collectible_flags <format=hex>;
    UNUSED;
    uint unused <format=hex>;
    KNOWN;
    uint64 visited_rooms <format=hex>;
} ZSaveSceneFlags;

typedef struct {
    float x_coordinate;
    float y_coordinate;
    float z_coordinate;
    float y_axis_rotation;
    UNKNOWN;
    ubyte unknown[4];
    KNOWN;
    uint entrance_index;
    uint map_index;
    uint is_set;
} ZSaveFaroresWind;

typedef enum <ubyte> {
    note_end = 0x00,
    note_a = 0x02, // D4
    note_down = 0x05, // F4
    note_right = 0x09, // A4
    note_left = 0x0B, // B4
    note_up = 0x0E, // D5
    note_stop = 0xFF,
} ZNote;

typedef struct {
    KNOWN;
    ZNote note;
    UNKNOWN;
    ubyte unknown0;
    KNOWN;
    uint16 length;
    ubyte volume;
    UNKNOWN;
    ubyte unknown1;
    KNOWN;
    byte pitch;
    byte vibrato;
} ZSongNote;

typedef struct {
    local string thisName = "ZSaveData";

    KNOWN;
    uint entrance_index <format=hex>; // Stores the Entrance Link starts/respawns at
    ZSaveAge age;
    uint cutscene_offset;
    uint16 time_of_day <format=hex>;
    ubyte unknown0[14];
    char file_validation[6];
    uint16 death_counter;
    char file_name[8];
    ubyte disk_drive_flag;

    UNUSED;
    ubyte unused0; // Disk Drive Flag only uses the first byte

    KNOWN;
    uint16 heart_containers <format=hex>; // 0x10 per heart
    uint16 health <format=hex>; // 0x10 per heart
    ZSaveMagicMeterSize magic_meter_size;
    ubyte magic <format=hex>; // 0x30 for normal, 0x60 for double
    uint16 rupees;
    uint16 giants_knife_durability; // How many hits you have left
    uint16 navi_timer;
    ubyte has_normal_magic; // boolean

    UNKNOWN;
    ubyte unknown1;

    KNOWN;
    ubyte has_double_magic; // boolean

    UNKNOWN;
    ubyte unknown2;

    KNOWN;
    ZSaveBiggoronSword biggoron_sword_flag; // If set, the giants knife will act as biggoron sword

    UNKNOWN;
    ubyte unknown3; // Maybe padding; the biggoron sword flag only uses one byte

    KNOWN;
    ZSaveEquippedData stored_child_equipment;

    KNOWN;
    ZSaveEquippedData stored_adult_equipment; // Needs to be verified;
    // the previous record may be used for both! This could be unused.

    UNKNOWN;
    ubyte unknown4[20];

    KNOWN;
    ZSaveEquippedData currentEquipment;

    UNUSED;
    uint16 unused1;

    KNOWN;
    ZSaveInventorySlotItemIDs inventory_slot_item_ids;

    KNOWN;
    ZSaveInventorySlotItemAmount inventory_slot_item_amount;

    KNOWN;
    ubyte magic_beans_available; // The amount of Magic Beans available for purchase.
    ZSaveEquipment equipment_data;
    KNOWN;
    ZSaveUpgrades upgrade_data;

    KNOWN;
    ZSaveQuestStatus quest_status_data;

    KNOWN;
    ZSaveDungeonItems dungeon_items[20];

    KNOWN;
    ubyte small_key_amount[20] <comment="255 will hide small key amount.">;

    uint16 gold_skulltula_amount;

    UNKNOWN;
    uint16 unknown5;

    KNOWN;
    ZSaveSceneFlags scene_flags[101];

    UNKNOWN;
    ubyte unknown6[0x284];

    KNOWN;
    ZSaveFaroresWind farores_wind_data;

    UNKNOWN;
    ubyte unknown7[0x18];

    KNOWN;
    ubyte skulltula_flags[0x18] <format=hex>;

    UNKNOWN;
    ubyte unknown8[0x4];

    KNOWN;
    uint horseback_archery_highscore;

    UNKNOWN;
    ubyte unknown9[0x8];

    KNOWN;
    uint horse_race_record_time;
    uint marathon_race_record_time;

    UNKNOWN;
    ubyte unknown10[0x6C]; // Event flags are somewhere in here

    KNOWN;
    uint world_map_exploration_data <format=hex>;

    UNKNOWN;
    ubyte unknown11[0x4];

    KNOWN;
    ubyte scarecrows_song_long[0x364];

    UNKNOWN;
    ubyte unknown12[0x20];

    KNOWN;
    uint16 scarecrows_song_acquired;
    ZSongNote scarecrows_song[0x10];

    UNKNOWN;
    ubyte unknown13[2]; // padding?
    ubyte unknown14[0xA];

    KNOWN;
    uint16 checksum <format=hex>;

    UNUSED;
    ubyte unused_end[0xFC]; // This data is saved from the SRAM, but is never loaded by the game

} ZSaveData;

typedef struct {
    local string thisName = "ZSaveDataHeader";
    KNOWN;
    ZSaveSoundSetting sound_setting;
    ZSaveTargetStyle target_style;

    UNKNOWN;
    ubyte unknown[5];

    KNOWN;
    char file_validation[5];

    UNUSED;
    ubyte padding[20];
} ZSaveDataHeader;

struct {
    ZSaveDataHeader saveDataHeader;
    ZSaveData saveData1;
    ZSaveData saveData2;
    ZSaveData saveData3;
    ZSaveData saveData1Backup;
    ZSaveData saveData2Backup;
    ZSaveData saveData3Backup;
} Save;
