// -*- mode: c;-*-
// main identifiers
#define GAME    "MM"
#define REGION  "E"
#define VIDEO   "PAL"
#define DEFLATE 1
#define DEBUG   1

// very significant identifiers that cannot
// be determined dynamically from the rom data yet
#define VFS           0x00024F60
#define AUDIOBANK     0x0002B2D0
#define AUDIOSEQ      0x000516C0
#define AUDIOTABLE    0x000A2B40
#define ATBL_END      0x005EB2B0
#define MSG_1_START   0x00AB0000
#define MSG_1         0x00C71000
#define MSG_2         0x00C7A000
#define MSG_3         0x00C83000
#define MSG_4         0x00C8C000

#define CODEFILE      0x00C95000
// unk
#define ACTORSTABLE   0x00DD5A50
// unk
#define ACTIONSTRINGS 0x00DDB22C
// unk
#define OBJECTSTABLE  0x00DE9D48
// unk
#define SCENETABLE    0x00DEB2B0
#define SCENELOOKUP   0x00DEB9C0
// unk
#define EXITTABLE     0x00DECD38
// unk
#define CREDITSTABLE  0x00DEEE28
// unk
#define OBJNAMES      0x00DFE500
// unk
#define SCENENAMES    0x00E05840
// unk

#define INSTRUMENT    0x00E0F7E0

#define SEQTABLE      0x00E0FC90

#define SAMPLES       0x00E104A0

#define CODEFILEEND   0x00E12600

// quantities of things
#define NUMVFSITEMS   1591
#define NUMACTORS     691
#define NUMSCENES     113
#define NUMEXITS      110

// helpers & known types
#include "autoload.bt"

// import the ROM structure
#include "skeleton.bt"

//FSeek(0x00DD5A50);

FSeek(0x00E80DF0);
En_GirlA en_girla(0x22D0);
//
//ZShopData boners;

FSeek(MSG_1);
ZMessageTable nes_message_static(MSG_1_START);

FSeek(0x00E82540);
Ram honk;


/*
// the following code walks the number of scenes
// maps some things
// but it skips a lot of details
typedef struct {
    string sceneName;
} SceneName;

local uint64 x = 0;
local uint64 y = 0;
local byte scene = 0;
for( y = 0; y < 110; y++ ){
    FSeek(EXITTABLE+5+12*y);
    int pointerD : 24;
    FSeek(FTell()+1);
    int namePointerD : 24;
    if( pointerD > 0 ){
        FSeek(namePointerD+EXITBOUNCEHACK);
        SceneName sceneName;
        //Printf("%s @ 0x%08LX\n", sceneName.sceneName, namePointerD+EXITBOUNCEHACK);
        FSeek(pointerD+1+EXITBOUNCEHACK);
        int pointerD2 : 24;
        FSeek(pointerD2+EXITBOUNCEHACK);
        ubyte _scene;
        if(_scene>127){
            //Printf("sceen should be negative\n");
            scene = 256-_scene;
        } else {
            scene = _scene;
        }
        FSeek(SCENETABLE+16*scene);
        uint pointerD3;
        uint namePointerD3;
        if(IsValidFile(pointerD3)){
			Printf("%08LX %08LX %-20s %02LX\n",pointerD3,namePointerD3,sceneName.sceneName,scene);
		}
    }
}
*/

FSeek(03066000h);
ZScene clocktower;

FSeek(0213B000h);
ZScene Z2_20SICHITAI2;

FSeek(0219E000h);
ZScene Z2_LAST_BS;

FSeek(021AF000h);
ZScene Z2_HAKASHITA;
// colorize everything we want to peep
SetBackColor(cOrange);
FSeek(0x01F1F000);
ubyte paint[0x01F2A510-0x01F1F000];

// the mayor
FSeek(0x01F1F000);
//FSeek(0x01F1F000 + );

ubyte imTheMayor;

FSeek(0x01F25928); // last display list before a texture


DisplayListScanner displayScan;


FSeek(0x01F2A510);
ubyte notTheMayor;
ReportBucket();
//ClearBucket();